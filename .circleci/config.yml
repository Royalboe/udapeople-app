version: 2.1

orbs: 
  slack: circleci/slack@4.12.1

defaults: &nodeImage
  docker:
      - image: circleci/node:13.8.0
commands:
  trigger_slack_notification:
    steps:
      - slack/notify:
          custom: |
            {
              "blocks": [
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "plain_text",
                      "text": "*This is a text notification*",
                      "emoji": true
                    }
                  ]
                }
              ]
            }
          event: always

  notify_slack_error:
    description: "Send a message in Slack"
    steps:
      - slack/notify:
          event: fail
          template: basic_fail_1

  notify_slack_success:
    description: "Send a message in Slack"
    steps:
      - slack/notify:
          event: pass
          template: basic_success_1

jobs:
  build-frontend:
    <<: *nodeImage
    steps:
      - trigger_slack_notification
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Build front-end
          command: |
            cd frontend
            npm install
            npm run build
      - save_cache:
          paths: [frontend/node_modules]
          key: frontend-build
      - notify_slack_success
      - notify_slack_error

  build-backend:
    <<: *nodeImage
    steps:
      - trigger_slack_notification
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run:
          name: Back-end build
          command: |
            cd backend
            npm install
            npm run build
      - save_cache:
          paths: [backend/node_modules]
          key: backend-build
      - notify_slack_success
      - notify_slack_error

  test-frontend:
    <<: *nodeImage
    steps:
      - trigger_slack_notification
      - checkout
      - restore_cache:
          keys: [frontend-test]
      - run:
          name: Front-end test
          command: |
            cd frontend
            npm install
            npm run test
      - save_cache:
          paths: [frontend/node_modules]
          key: frontend-test
      - notify_slack_success
      - notify_slack_error
  
  test-backend:
    <<: *nodeImage
    steps:
      - trigger_slack_notification
      - checkout
      - restore_cache:
          keys: [backend-test]
      - run:
          name: Back-end test
          command: |
            cd backend
            npm install
            npm run test
      - save_cache:
          paths: [backend/node_modules]
          key: backend-test
      - notify_slack_success
      - notify_slack_error

  scan-frontend:
    <<: *nodeImage
    steps:
      - trigger_slack_notification
      - checkout
      - restore_cache:
          keys: [frontend-scan]
      - run:
          name: Front-end scan
          command: |
            cd frontend
            npm install
            npm audit fix --audit-level=critical --force
      - save_cache:
          paths: [frontend/node_modules]
          key: frontend-scan
      - notify_slack_success
      - notify_slack_error
    
  scan-backend:
    <<: *nodeImage
    steps:
      - trigger_slack_notification
      - checkout
      - restore_cache:
          keys: [backend-scan]
      - run:
          name: Back-end scan
          command: |
            cd backend
            npm install
            npm audit fix --audit-level=critical --force
      - save_cache:
          paths: [backend/node_modules]
          key: backend-scan
      - notify_slack_success
      - notify_slack_error

workflows:
  default:
    jobs:
      - build-frontend
      - build-backend
      - test-frontend: 
          requires: 
            - build-frontend
      - test-backend:
          requires:
            - build-backend
      - scan-frontend:
          requires:
            - build-frontend
      - scan-backend:
          requires:
            - build-backend